from random import randint

# # 1) Вычислить число Пи c заданной точностью d
# # Пример:
# # - при $d = 0.001, π = 3.141.$    $10^{-1} ≤ d ≤10^{-10}$    
d = 0.001
num = abs(str(d).find('.') - len(str(d))) - 1

k = 1
p = 0
for k in range(1, 1000000):
    p = p + 4*((-1)**(k + 1)/(2 * k - 1))
print(round(p, num))

# # 2) Задайте натуральное число N. Напишите программу, которая составит список простых множителей числа N.

n = 50
def fun2(a):
    lst = []
    d = 2
    while d * d <= a:
        if a % d == 0:
            lst.append(d)
            a //= d
        else:
            d += 1
    if a > 1:
        lst.append(a)
    return lst
print(f'Список простых множителей {fun2(n)}')

# # 3) Задайте последовательность чисел. Напишите программу, которая выведет список неповторяющихся элементов
# # исходной последовательности.

lst = [1, 45, 99, 34, 99, 1, 101, 65]
fun3 = list(filter(lambda x: lst.count(x) == 1, lst))
print('Исходный список ', lst)
print(f'Cписок неповторяющихся элементов: {fun3}')


# # 4) Задана натуральная степень k. Сформировать случайным образом список коэффициентов (значения от 0 до 100)
# # многочлена и записать в файл многочлен степени k.
# # Пример:
# # - k=2 => 2*x² + 4*x + 5 = 0 или x² + 5 = 0 или 10*x² = 0


coefficients = []

extent = int(input('Введите степерь многочлена: '))
for i in range(extent + 1):
    num = randint(-10, 10)
    if num != 0:
        coefficients.append(num)

print(coefficients)
resul = []

for i in range(len(coefficients)):
    if coefficients[i] == -1 and extent - i != 0:
        st = ('-X^' + str(extent - i))

    elif coefficients[i] != 0 and extent - i == 0:
        st = (str(coefficients[i]))

    elif coefficients[i] == 1 and extent - i == 1:
        st = ('X')

    elif coefficients[i] != 0 and extent - i == 1:
        st = (str(coefficients[i]) + 'X')

    else:
        st = (str(coefficients[i]) + 'X^' + str(extent - i))

    if '-' not in st and i > 0:
        resul.append('+')

    resul.append(st)
resul.append(str('= 0'))
print(*resul)

with open('4.txt', 'w') as file:
        file.writelines(resul)

# 5) Даны два файла, в каждом из которых находится запись многочлена. Задача - сформировать файл, содержащий сумму многочленов.
