# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ —Ü–∏—Ñ—Ä—É, –æ–±–æ–∑–Ω–∞—á–∞—é—â—É—é –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏, –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ—Ç –¥–µ–Ω—å –≤—ã—Ö–æ–¥–Ω—ã–º.

import math
from tkinter import E

data = int(input('\n########\n–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 7 –∏ —É–∑–Ω–∞–µ—Ç–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –≤—ã—Ö–æ–¥–Ω—ã–º. \n–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: '))

if data == 6 or data == 7:
    print(f'{data}-–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ —è–≤–ª—è–µ—Ç—Å—è –≤—ã—Ö–æ–¥–Ω—ã–º!')
elif data >= 1 and data <= 5:
    print('–≠—Ç–æ –±—É–¥–Ω–∏–π –¥–µ–Ω—å!')
else:
    print('–¢–∞–∫–æ–≥–æ –¥–Ω—è –Ω–µ–¥–µ–ª–∏ –µ—â–µ –Ω–µ –ø—Ä–∏–¥—É–º–∞–ª–∏ üòâ ')

# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è. –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å—Ç–∏–Ω–Ω–æ—Å—Ç–∏ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è ¬¨(X ‚ãÅ Y ‚ãÅ Z) = ¬¨X ‚ãÄ ¬¨Y ‚ãÄ ¬¨Z –¥–ª—è –≤—Å–µ—Ö –∑–Ω–∞—á–µ–Ω–∏–π –ø—Ä–µ–¥–∏–∫–∞—Ç.


# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ç–æ—á–∫–∏ (X –∏ Y), –ø—Ä–∏—á—ë–º X ‚â† 0 –∏ Y ‚â† 0 
# –∏ –≤—ã–¥–∞—ë—Ç –Ω–æ–º–µ—Ä —á–µ—Ç–≤–µ—Ä—Ç–∏ –ø–ª–æ—Å–∫–æ—Å—Ç–∏, –≤ –∫–æ—Ç–æ—Ä–æ–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —ç—Ç–∞ —Ç–æ—á–∫–∞ (–∏–ª–∏ –Ω–∞ –∫–∞–∫–æ–π –æ—Å–∏ –æ–Ω–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è).

print('\n########\n–ß–µ—Ç–≤–µ—Ä—Ç–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–Ω–æ–π –ø–ª–æ—Å–∫–æ—Å—Ç–∏. –í–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ö –∏ —É —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª: ')
quarter = 'I'
inp = False
symbol = ' '
x = 0
y = 0

while inp != True:
    data = input()
    if symbol in data and data.find(symbol) != 0 and data.find(symbol) != len(data) - 1:
        x = int(data[:data.find(' ')])
        y = int(data[data.find(' ')+1:])
        inp = True
        if x > 0 and y > 0:
            print(f'–¢–æ—á–∫–∞ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ ({x};{y}) –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ {quarter} –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–Ω–æ–π —á–µ—Ç–≤–µ—Ä—Ç–∏.')
        elif x < 0 and y > 0:
            quarter = 'II'
            print(f'–¢–æ—á–∫–∞ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ ({x};{y}) –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤–æ {quarter} –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–Ω–æ–π —á–µ—Ç–≤–µ—Ä—Ç–∏.')
        elif x < 0 and y < 0:
            quarter = 'III'
            print(f'–¢–æ—á–∫–∞ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ ({x};{y}) –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ {quarter} –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–Ω–æ–π —á–µ—Ç–≤–µ—Ä—Ç–∏.')
        elif x > 0 and y < 0:
            quarter = 'IV'
            print(f'–¢–æ—á–∫–∞ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ ({x};{y}) –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ {quarter} –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–Ω–æ–π —á–µ—Ç–≤–µ—Ä—Ç–∏.')
        elif x == 0 and y == 0:
            print('–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã –Ω–∞ —ç–∫–≤–∞—Ç–æ—Ä–µüòÑ  –î–∞–≤–∞–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏–º –ø–æ–ø—ã—Ç–∫—É: ')
            inp = False
    else:
        print('–î–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É: ')


# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É –Ω–æ–º–µ—Ä—É —á–µ—Ç–≤–µ—Ä—Ç–∏, –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∏–∞–ø–∞–∑–æ–Ω –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç —Ç–æ—á–µ–∫ –≤ —ç—Ç–æ–π —á–µ—Ç–≤–µ—Ä—Ç–∏ (x –∏ y).

if quarter == 'I':
    print(f'–î–∏–∞–ø–∞–∑–æ–Ω –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç —Ç–æ—á–µ–∫ –≤ {quarter} —á–µ—Ç–≤–µ—Ä—Ç–∏ –∫–æ–ª–µ–±–ª–µ—Ç—Å—è –æ—Ç (0 –¥–æ +‚àû ; 0 –¥–æ +‚àû)')
elif quarter == 'II':
    print(f'–î–∏–∞–ø–∞–∑–æ–Ω –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç —Ç–æ—á–µ–∫ –≤–æ {quarter} —á–µ—Ç–≤–µ—Ä—Ç–∏ –∫–æ–ª–µ–±–ª–µ—Ç—Å—è –æ—Ç (0 –¥–æ -‚àû ; 0 –¥–æ +‚àû)')
elif quarter == 'III':
    print(f'–î–∏–∞–ø–∞–∑–æ–Ω –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç —Ç–æ—á–µ–∫ –≤ {quarter} —á–µ—Ç–≤–µ—Ä—Ç–∏ –∫–æ–ª–µ–±–ª–µ—Ç—Å—è –æ—Ç (0 –¥–æ -‚àû ; 0 –¥–æ -‚àû)')
elif quarter == 'IV':
    print(f'–î–∏–∞–ø–∞–∑–æ–Ω –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç —Ç–æ—á–µ–∫ –≤ {quarter} —á–µ—Ç–≤–µ—Ä—Ç–∏ –∫–æ–ª–µ–±–ª–µ—Ç—Å—è –æ—Ç (0 –¥–æ +‚àû ; 0 –¥–æ -‚àû)')


# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–≤—É—Ö —Ç–æ—á–µ–∫ –∏ –Ω–∞—Ö–æ–¥–∏—Ç —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –Ω–∏–º–∏ –≤ 2D –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ.
print('\n########\n–ù–∞—Ö–æ–¥–∂–µ–Ω–∏–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –º–µ–∂–¥—É –¥–≤—É–º—è —Ç–æ—á–∫–∞–º–∏ –≤ 2D –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ ')
inp_a = False
inp_b = False

while inp_a != True:
    dot_a = input('–í–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ö –∏ —É —Ç–æ—á–∫–∏ –ê —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª: ')
    if symbol in dot_a and dot_a.find(symbol) != 0 and dot_a.find(symbol) != len(dot_a) - 1:
        x_a = int(dot_a[:dot_a.find(' ')])
        y_a = int(dot_a[dot_a.find(' ')+1:])
        inp_a = True
    else:
        print('–î–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É: ')

while inp_b != True:
    dot_b = input('–í–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ö –∏ —É —Ç–æ—á–∫–∏ B —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª: ')
    if symbol in dot_b and dot_b.find(symbol) != 0 and dot_b.find(symbol) != len(dot_b) - 1:
        x_b = int(dot_b[:dot_b.find(' ')])
        y_b = int(dot_b[dot_b.find(' ')+1:])
        inp_b = True
    else:
        print('–î–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É: ')

a = round(math.sqrt((x_b - x_a)**2 + (y_b - y_a)**2))
print(f'–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É —Ç–æ—á–∫–∞–º–∏ –ê –∏ B —Ä–∞–≤–Ω–æ {round(math.sqrt((x_b - x_a)**2 + (y_b - y_a)**2), 3)}')